{"version":3,"file":"super-tabs.js","sourceRoot":"","sources":["../../src/components/super-tabs.ts"],"names":[],"mappings":"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","sourcesContent":["import 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/debounceTime';\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  App,\n  DeepLinker,\n  DomController,\n  NavController,\n  NavControllerBase,\n  Platform,\n  RootNode,\n  ViewController\n} from 'ionic-angular';\nimport { DIRECTION_SWITCH } from 'ionic-angular/navigation/nav-util';\nimport { NavigationContainer } from 'ionic-angular/navigation/navigation-container';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { SuperTabsController } from '../providers/super-tabs-controller';\nimport { SuperTabComponent } from './super-tab';\nimport { SuperTabsContainer } from './super-tabs-container';\nimport { SuperTabsToolbar } from './super-tabs-toolbar';\n\nexport interface SuperTabsConfig {\n  /**\n   * Defaults to 40\n   */\n  maxDragAngle?: number;\n  /**\n   * Defaults to 20\n   */\n  dragThreshold?: number;\n  /**\n   * Allows elements inside tabs to be dragged, defaults to false\n   */\n  allowElementScroll?: boolean;\n  /**\n   * Defaults to ease-in-out\n   */\n  transitionEase?: string;\n  /**\n   * Defaults to 150\n   */\n  transitionDuration?: number;\n  /**\n   * Defaults to none\n   */\n  sideMenu?: 'left' | 'right' | 'both';\n  /**\n   * Defaults to 50\n   */\n  sideMenuThreshold?: number;\n\n  /**\n   * Defaults to 300\n   */\n  shortSwipeDuration?: number;\n}\n\n@Component({\n  selector: 'super-tabs',\n  template: `\n    <super-tabs-toolbar [tabsPlacement]=\"tabsPlacement\" [hidden]=\"!_isToolbarVisible\" [config]=\"config\"\n                        [color]=\"toolbarBackground\"\n                        [tabsColor]=\"toolbarColor\" [indicatorColor]=\"indicatorColor\" [badgeColor]=\"badgeColor\"\n                        [scrollTabs]=\"scrollTabs\"\n                        [selectedTab]=\"selectedTabIndex\"\n                        (tabSelect)=\"onToolbarTabSelect($event)\"></super-tabs-toolbar>\n    <super-tabs-container [config]=\"config\" [tabsCount]=\"_tabs.length\" [selectedTabIndex]=\"selectedTabIndex\"\n                          (tabSelect)=\"onContainerTabSelect($event)\" (onDrag)=\"onDrag()\">\n      <ng-content></ng-content>\n    </super-tabs-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: RootNode,\n      useExisting: forwardRef(() => SuperTabsComponent)\n    }\n  ]\n})\nexport class SuperTabsComponent\n  implements\n    OnInit,\n    AfterContentInit,\n    AfterViewInit,\n    OnDestroy,\n    RootNode,\n    NavigationContainer {\n  /**\n   * Color of the toolbar behind the tab buttons\n   */\n  @Input() toolbarBackground: string;\n\n  /**\n   * Color of the tab buttons' text and/or icon\n   */\n  @Input() toolbarColor: string;\n\n  /**\n   * Color of the slider that moves based on what tab is selected\n   */\n  @Input() indicatorColor = 'primary';\n\n  /**\n   * Badge color\n   */\n  @Input() badgeColor = 'primary';\n\n  /**\n   * Configuration\n   */\n  @Input() config: SuperTabsConfig = {};\n\n  /**\n   * Tabs instance ID\n   */\n  @Input() id: string;\n\n  @Input() name: string;\n\n  /**\n   * Height of the tabs\n   */\n  @Input()\n  set height(val: number) {\n    this.rnd.setStyle(this.el.nativeElement, 'height', val + 'px');\n  }\n\n  get height(): number {\n    return this.el.nativeElement.offsetHeight;\n  }\n\n  /**\n   * The initial selected tab index\n   * @param val {number} tab index\n   */\n  @Input()\n  set selectedTabIndex(val: number) {\n    this._selectedTabIndex = Number(val);\n    this.init && this.alignIndicatorPosition(true);\n  }\n\n  get selectedTabIndex(): number {\n    return this._selectedTabIndex;\n  }\n\n  /**\n   * Set to true to enable tab buttons scrolling\n   * @param val\n   */\n  @Input()\n  set scrollTabs(val: boolean) {\n    this._scrollTabs = typeof val !== 'boolean' || val === true;\n  }\n\n  get scrollTabs() {\n    return this._scrollTabs;\n  }\n\n  /**\n   * Tab buttons placement. Can be `top` or `bottom`.\n   * @type {string}\n   */\n  @Input() tabsPlacement = 'top';\n\n  /**\n   * Emits the tab index when the selected tab changes\n   * @type {EventEmitter<Object>}\n   */\n  @Output() tabSelect: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Indicates whether the toolbar is visible\n   * @private\n   */\n  _isToolbarVisible = true;\n\n  /**\n   * @private\n   */\n  _tabs: SuperTabComponent[] = [];\n\n  @ViewChild(SuperTabsToolbar) private toolbar: SuperTabsToolbar;\n\n  @ViewChild(SuperTabsContainer) private tabsContainer: SuperTabsContainer;\n\n  private maxIndicatorPosition: number;\n\n  /**\n   * Indicates whether the tab buttons should scroll\n   * @type {boolean}\n   * @private\n   */\n  private _scrollTabs = false;\n\n  /**\n   * Selected tab index\n   * @type {number}\n   * @private\n   */\n  private _selectedTabIndex = 0;\n\n  /**\n   * Any observable subscriptions that we should unsubscribe from when destroying this component\n   * @type {Array<Subscription>}\n   * @private\n   */\n  private watches: Subscription[] = [];\n\n  /**\n   * Indicates whether any of the tabs has an icon\n   * @type {boolean}\n   * @private\n   */\n  private hasIcons = false;\n\n  /**\n   * Indicates whether any of the tabs has a title\n   * @type {boolean}\n   * @private\n   */\n  private hasTitles = false;\n\n  /**\n   * Indicates whether the component has finished initializing\n   * @type {boolean}\n   * @private\n   */\n  private init = false;\n\n  /**\n   * Parent NavController\n   * @type {NavControllerBase}\n   */\n  parent: NavControllerBase;\n\n  constructor(\n    @Optional() parent: NavController,\n    @Optional() public viewCtrl: ViewController,\n    private _app: App,\n    private el: ElementRef,\n    private rnd: Renderer2,\n    private superTabsCtrl: SuperTabsController,\n    private linker: DeepLinker,\n    private domCtrl: DomController,\n    private _plt: Platform\n  ) {\n    this.parent = <NavControllerBase>parent;\n\n    if (this.parent) {\n      this.parent.registerChildNav(this);\n    } else if (viewCtrl && viewCtrl.getNav()) {\n      this.parent = <any>viewCtrl.getNav();\n      this.parent.registerChildNav(this);\n    } else if (this._app) {\n      this._app.registerRootNav(this);\n    }\n\n    const obsToMerge: Observable<any>[] = [\n      Observable.fromEvent(window, 'orientationchange'),\n      Observable.fromEvent(window, 'resize')\n    ];\n\n    if (viewCtrl) {\n      obsToMerge.push(viewCtrl.didEnter);\n    }\n\n    // re-adjust the height of the slider when the orientation changes\n    const $windowResize = Observable.merge\n      .apply(this, obsToMerge)\n      .debounceTime(100);\n\n    const windowResizeSub = $windowResize.subscribe(() => {\n      this.resize();\n    });\n\n    this.watches.push(windowResizeSub);\n  }\n\n  ngOnInit() {\n    const defaultConfig: SuperTabsConfig = {\n      dragThreshold: 10,\n      allowElementScroll: false,\n      maxDragAngle: 40,\n      sideMenuThreshold: 50,\n      transitionDuration: 300,\n      transitionEase: 'cubic-bezier(0.35, 0, 0.25, 1)',\n      shortSwipeDuration: 300\n    };\n\n    for (let prop in this.config) {\n      defaultConfig[prop] = this.config[prop];\n    }\n\n    this.config = defaultConfig;\n\n    if (this.config.allowElementScroll === true) {\n      if (this.config.dragThreshold < 110) {\n        this.config.dragThreshold = 110;\n      }\n    }\n\n    this.id = this.id || `super-tabs-${++superTabsIds}`;\n    this.superTabsCtrl.registerInstance(this);\n\n    if (this.tabsPlacement === 'bottom') {\n      this.rnd.addClass(\n        this.getElementRef().nativeElement,\n        'tabs-placement-bottom'\n      );\n    }\n  }\n\n  ngAfterContentInit() {\n    this.updateTabWidth();\n    this.toolbar.tabs = this._tabs;\n  }\n\n  async ngAfterViewInit() {\n    const tabsSegment = this.linker.getSegmentByNavIdOrName(this.id, this.name);\n\n    if (tabsSegment) {\n      this.selectedTabIndex = this.getTabIndexById(tabsSegment.id);\n    }\n\n    this.linker.navChange(DIRECTION_SWITCH);\n\n    if (!this.hasTitles && !this.hasIcons) {\n      this._isToolbarVisible = false;\n    }\n\n    this.tabsContainer.slideTo(this.selectedTabIndex, false);\n    await this.refreshTabStates();\n    this.fireLifecycleEvent(['willEnter', 'didEnter']);\n\n    this.setFixedIndicatorWidth();\n\n    // we need this to make sure the \"slide\" thingy doesn't move outside the screen\n    this.setMaxIndicatorPosition();\n\n    setTimeout(() => this.alignIndicatorPosition(), 100);\n\n    this.refreshContainerHeight();\n\n    this.init = true;\n  }\n\n  ngOnDestroy() {\n    this.watches.forEach((watch: Subscription) => {\n      watch.unsubscribe && watch.unsubscribe();\n    });\n\n    this.parent.unregisterChildNav(this);\n\n    this.superTabsCtrl.unregisterInstance(this.id);\n  }\n\n  getType(): string {\n    return;\n  }\n\n  getSecondaryIdentifier(): string {\n    return;\n  }\n\n  getAllChildNavs(): any[] {\n    return this._tabs;\n  }\n\n  resize() {\n    if (this.el.nativeElement.offsetParent === null) {\n      return;\n    }\n    this.setMaxIndicatorPosition();\n    this.updateTabWidth();\n    this.setFixedIndicatorWidth();\n    this.refreshTabWidths();\n    this.tabsContainer.refreshDimensions();\n    this.tabsContainer.slideTo(this.selectedTabIndex);\n    this.alignIndicatorPosition();\n    this.refreshContainerHeight();\n  }\n\n  /**\n   * Sets the badge number for a specific tab\n   * @param tabId {string} tab ID\n   * @param value {number} badge number\n   */\n  setBadge(tabId: string, value: number) {\n    this.getTabById(tabId).setBadge(value);\n  }\n\n  /**\n   * Clears the badge for a specific tab\n   * @param tabId {string} tab ID\n   */\n  clearBadge(tabId: string) {\n    this.getTabById(tabId).clearBadge();\n  }\n\n  /**\n   * Increases the badge value for a specific tab\n   * @param tabId {string} tab ID\n   * @param increaseBy {number} the number to increase by\n   */\n  increaseBadge(tabId: string, increaseBy: number) {\n    this.getTabById(tabId).increaseBadge(increaseBy);\n  }\n\n  decreaseBadge(tabId: string, decreaseBy: number) {\n    this.getTabById(tabId).decreaseBadge(decreaseBy);\n  }\n\n  enableTabsSwipe(enable: boolean) {\n    this.tabsContainer.enableTabsSwipe(enable);\n  }\n\n  enableTabSwipe(tabId: string, enable: boolean) {\n    this.tabsContainer.enableTabSwipe(this.getTabIndexById(tabId), enable);\n  }\n\n  showToolbar(show: boolean) {\n    this._isToolbarVisible = show;\n    this.refreshContainerHeight();\n  }\n\n  slideTo(indexOrId: string | number, fireEvent: boolean = true) {\n    typeof indexOrId === 'string' &&\n      (indexOrId = this.getTabIndexById(indexOrId));\n    fireEvent && this.onToolbarTabSelect(indexOrId);\n  }\n\n  getActiveChildNavs(): NavigationContainer[] {\n    if (this.selectedTabIndex < 0) {\n      this.selectedTabIndex = 0;\n    }\n    \n    return [this._tabs[this.selectedTabIndex]];\n  }\n\n  addTab(tab: SuperTabComponent) {\n    tab.rootNavCtrl = this.parent;\n    tab.rootParams = tab.rootParams || {};\n\n    tab.tabId = tab.tabId || `super-tabs-${this.id}-tab-${this._tabs.length}`;\n\n    this._tabs.push(tab);\n\n    if (tab.icon) {\n      this.hasIcons = true;\n    }\n\n    if (tab.title) {\n      this.hasTitles = true;\n    }\n\n    tab.setWidth(this.el.nativeElement.offsetWidth);\n  }\n\n  /**\n   * We listen to drag events to move the \"slide\" thingy along with the slides\n   */\n  onDrag() {\n    if (!this._isToolbarVisible) {\n      return;\n    }\n\n    this.domCtrl.write(() => {\n      const singleSlideWidth = this.tabsContainer.tabWidth,\n        slidesWidth = this.tabsContainer.containerWidth;\n\n      let percentage = Math.abs(\n        this.tabsContainer.containerPosition / slidesWidth\n      );\n\n      if (this.scrollTabs) {\n        const originalSlideStart = singleSlideWidth * this.selectedTabIndex,\n          originalPosition = this.getRelativeIndicatorPosition(),\n          originalWidth = this.getSegmentButtonWidth();\n\n        let nextPosition: number,\n          nextWidth: number,\n          indicatorPosition: number,\n          indicatorWidth: number;\n\n        const deltaTabPos =\n          originalSlideStart - Math.abs(this.tabsContainer.containerPosition);\n\n        percentage = Math.abs(deltaTabPos / singleSlideWidth);\n\n        if (deltaTabPos < 0) {\n          // going to next slide\n          nextPosition = this.getRelativeIndicatorPosition(\n            this.selectedTabIndex + 1\n          );\n          nextWidth = this.getSegmentButtonWidth(this.selectedTabIndex + 1);\n          indicatorPosition =\n            originalPosition + percentage * (nextPosition - originalPosition);\n        } else {\n          // going to previous slide\n          nextPosition = this.getRelativeIndicatorPosition(\n            this.selectedTabIndex - 1\n          );\n          nextWidth = this.getSegmentButtonWidth(this.selectedTabIndex - 1);\n          indicatorPosition =\n            originalPosition - percentage * (originalPosition - nextPosition);\n        }\n\n        const deltaWidth: number = nextWidth - originalWidth;\n        indicatorWidth = originalWidth + percentage * deltaWidth;\n\n        if (\n          (originalWidth > nextWidth && indicatorWidth < nextWidth) ||\n          (originalWidth < nextWidth && indicatorWidth > nextWidth)\n        ) {\n          // this is only useful on desktop, because you are able to drag and swipe through multiple tabs at once\n          // which results in the indicator width to be super small/big since it's changing based on the current/next widths\n          indicatorWidth = nextWidth;\n        }\n\n        this.alignTabButtonsContainer();\n        this.toolbar.setIndicatorProperties(indicatorWidth, indicatorPosition);\n      } else {\n        this.toolbar.setIndicatorPosition(\n          Math.min(percentage * singleSlideWidth, this.maxIndicatorPosition)\n        );\n      }\n    });\n  }\n\n  /**\n   * Runs when the user clicks on a segment button\n   * @param index\n   */\n  async onTabChange(index: number) {\n    index = Number(index);\n    if (index === this.selectedTabIndex) {\n      this.tabSelect.emit({\n        index,\n        id: this._tabs[index].tabId,\n        changed: false\n      });\n      return;\n    }\n\n    if (index <= this._tabs.length) {\n      this.fireLifecycleEvent(['willLeave', 'didLeave']);\n\n      this.selectedTabIndex = index;\n\n      this.linker.navChange(DIRECTION_SWITCH);\n\n      await this.refreshTabStates();\n\n      this.fireLifecycleEvent(['willEnter', 'didEnter']);\n\n      this.tabSelect.emit({\n        index,\n        id: this._tabs[index].tabId,\n        changed: true\n      });\n    }\n  }\n\n  onToolbarTabSelect(index: number) {\n    if (index !== this.selectedTabIndex) {\n      this.tabsContainer.slideTo(index);\n    }\n    return this.onTabChange(index);\n  }\n\n  async onContainerTabSelect(ev: { index: number; changed: boolean }) {\n    if (ev.changed) {\n      await this.onTabChange(ev.index);\n    }\n    this.alignIndicatorPosition(true);\n  }\n\n  private fireLifecycleEvent(events: string[]) {\n    const activeView = this.getActiveTab().getActive();\n    events.forEach((event: string) => {\n      switch (event) {\n        case 'willEnter':\n          activeView._willEnter();\n          break;\n        case 'didEnter':\n          activeView._didEnter();\n          break;\n        case 'willLeave':\n          activeView._willLeave(false);\n          break;\n        case 'didLeave':\n          activeView._didLeave();\n          break;\n      }\n    });\n  }\n\n  private refreshTabStates() {\n    return Promise.all(\n      this._tabs.map((tab, i) => {\n        tab.setActive(i === this.selectedTabIndex);\n\n        return tab.load(Math.abs(this.selectedTabIndex - i) < 2);\n      })\n    );\n  }\n\n  private updateTabWidth() {\n    this.tabsContainer.tabWidth = this.el.nativeElement.offsetWidth;\n  }\n\n  private refreshContainerHeight() {\n    let heightOffset = 0;\n\n    if (this._isToolbarVisible) {\n      if (this.hasTitles && this.hasIcons) {\n        heightOffset = 72;\n      } else if (this.hasTitles || this.hasIcons) {\n        heightOffset = 48;\n      }\n    }\n\n    this.rnd.setStyle(\n      this.tabsContainer.getNativeElement(),\n      'height',\n      `calc(100% - ${heightOffset}px)`\n    );\n  }\n\n  private refreshTabWidths() {\n    const width: number = this.el.nativeElement.offsetWidth;\n    this._tabs.forEach((tab: SuperTabComponent) => tab.setWidth(width));\n  }\n\n  private alignTabButtonsContainer(animate?: boolean) {\n    const mw: number = this.el.nativeElement.offsetWidth, // max width\n      iw: number = this.toolbar.indicatorWidth, // indicator width\n      ip: number = this.toolbar.indicatorPosition, // indicatorPosition\n      sp: number = this.toolbar.segmentPosition; // segment position\n\n    if (mw === 0) {\n      return;\n    }\n\n    if (this.toolbar.segmentWidth <= mw) {\n      if (this.toolbar.segmentPosition !== 0) {\n        this.toolbar.setSegmentPosition(0, animate);\n      }\n      return;\n    }\n\n    let pos;\n    if (ip + iw + (mw / 2 - iw / 2) > mw + sp) {\n      // we need to move the segment container to the left\n      const delta: number = ip + iw + (mw / 2 - iw / 2) - mw - sp,\n        max: number = this.toolbar.segmentWidth - mw;\n\n      pos = sp + delta;\n      pos = pos < max ? pos : max;\n    } else if (ip - (mw / 2 - iw / 2) < sp) {\n      // we need to move the segment container to the right\n      pos = ip - (mw / 2 - iw / 2);\n      // pos = pos >= 0? pos : 0;\n      pos = pos < 0 ? 0 : pos > ip ? ip - mw + iw : pos;\n      // pos = pos < 0? 0 : pos > maxPos? maxPos : pos;\n    } else {\n      // no need to move the segment container\n      return;\n    }\n\n    this.toolbar.setSegmentPosition(pos, animate);\n  }\n\n  private getRelativeIndicatorPosition(\n    index: number = this.selectedTabIndex\n  ): number {\n    let position = 0;\n    for (let i = 0; i < this.toolbar.segmentButtonWidths.length; i++) {\n      if (index > Number(i)) {\n        position += this.toolbar.segmentButtonWidths[i];\n      }\n    }\n    return position;\n  }\n\n  private getAbsoluteIndicatorPosition(): number {\n    const position =\n      (this.selectedTabIndex * this.tabsContainer.tabWidth) / this._tabs.length;\n    return position <= this.maxIndicatorPosition\n      ? position\n      : this.maxIndicatorPosition;\n  }\n\n  /**\n   * Gets the width of a tab button when `scrollTabs` is set to `true`\n   */\n  private getSegmentButtonWidth(index: number = this.selectedTabIndex): number {\n    if (!this._isToolbarVisible) {\n      return;\n    }\n    return this.toolbar.segmentButtonWidths[index];\n  }\n\n  private setMaxIndicatorPosition() {\n    if (this.el && this.el.nativeElement) {\n      this.maxIndicatorPosition =\n        this.el.nativeElement.offsetWidth -\n        this.el.nativeElement.offsetWidth / this._tabs.length;\n    }\n  }\n\n  private setFixedIndicatorWidth() {\n    if (this.scrollTabs || !this._isToolbarVisible) {\n      return;\n    }\n    // the width of the \"slide\", should be equal to the width of a single `ion-segment-button`\n    // we'll just calculate it instead of querying for a segment button\n    this.toolbar.setIndicatorWidth(\n      this.el.nativeElement.offsetWidth / this._tabs.length,\n      false\n    );\n  }\n\n  /**\n   * Aligns slide position with selected tab\n   */\n  private alignIndicatorPosition(animate: boolean = false) {\n    if (!this._isToolbarVisible) {\n      return;\n    }\n\n    if (this.scrollTabs) {\n      this.toolbar.alignIndicator(\n        this.getRelativeIndicatorPosition(),\n        this.getSegmentButtonWidth(),\n        animate\n      );\n      this.alignTabButtonsContainer(animate);\n    } else {\n      this.toolbar.setIndicatorPosition(\n        this.getAbsoluteIndicatorPosition(),\n        animate\n      );\n    }\n  }\n\n  getTabIndexById(tabId: string): number {\n    return this._tabs.findIndex((tab: SuperTabComponent) => tab.tabId === tabId);\n  }\n\n  getTabById(tabId: string): SuperTabComponent {\n    return this._tabs.find((tab: SuperTabComponent) => tab.tabId === tabId);\n  }\n\n  getActiveTab(): SuperTabComponent {\n    return this._tabs[this.selectedTabIndex];\n  }\n\n  // needed since we're implementing RootNode\n  getElementRef() {\n    return this.el;\n  }\n\n  // needed since we're implementing RootNode\n  initPane() {\n    return true;\n  }\n\n  // needed since we're implementing RootNode\n  paneChanged() {}\n\n  // needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\n  getSelected() {}\n\n  // needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\n  setTabbarPosition() {}\n\n  // update segment button widths manually\n  indexSegmentButtonWidths() {\n    this._plt.raf(() => this.toolbar.indexSegmentButtonWidths());\n  }\n}\n\nlet superTabsIds = -1;\n"]}