{"version":3,"file":"super-tabs-toolbar.js","sourceRoot":"","sources":["../../src/components/super-tabs-toolbar.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\nimport { SuperTabsPanGesture } from '../super-tabs-pan-gesture';\nimport { SuperTabButtonComponent } from './super-tab-button';\nimport { SuperTabsConfig } from './super-tabs';\n\n@Component({\n  selector: 'super-tabs-toolbar',\n  template: `\n    <ion-toolbar [color]=\"color\" mode=\"md\" [class.scroll-tabs]=\"scrollTabs\">\n      <div class=\"tab-buttons-container\" #tabButtonsContainer>\n        <div *ngIf=\"tabsPlacement === 'bottom'\" class=\"indicator {{ 'button-md-' + indicatorColor }}\" #indicator></div>\n        <div class=\"tab-buttons\" #tabButtons>\n          <super-tab-button *ngFor=\"let tab of tabs; let i = index\" (select)=\"onTabSelect(i)\" [title]=\"tab.title\"\n                            [icon]=\"tab.icon\" [badge]=\"tab.badge\" [selected]=\"selectedTab === i\" [color]=\"tabsColor\"\n                            [badgeColor]=\"badgeColor\"></super-tab-button>\n        </div>\n        <div *ngIf=\"tabsPlacement === 'top'\" class=\"indicator {{ 'button-md-' + indicatorColor }}\" #indicator></div>\n      </div>\n    </ion-toolbar>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SuperTabsToolbar implements AfterViewInit, OnDestroy {\n  @Input() color = '';\n\n  @Input() tabsColor = '';\n\n  @Input() badgeColor = '';\n\n  @Input() scrollTabs = false;\n\n  @Input() indicatorColor = '';\n\n  @Input() selectedTab = 0;\n\n  @Input() config: SuperTabsConfig;\n\n  @Input() tabsPlacement: string;\n\n  indicatorPosition = 0;\n\n  indicatorWidth = 0;\n\n  @Output() tabSelect: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChildren(SuperTabButtonComponent)\n  private tabButtons: QueryList<SuperTabButtonComponent>;\n\n  @ViewChild('tabButtonsContainer') private tabButtonsContainer: ElementRef;\n\n  @ViewChild('indicator') private indicator: ElementRef;\n\n  @ViewChild('tabButtons') private tabButtonsBar: ElementRef;\n\n  /**\n   * @private\n   */\n  segmentPosition = 0;\n\n  /**\n   * The width of each button\n   */\n  segmentButtonWidths: number[] = [];\n\n  /**\n   * The segment width\n   */\n  segmentWidth = 0;\n\n  tabs: any[] = [];\n\n  private gesture: SuperTabsPanGesture;\n\n  private animationState = {\n    indicator: false,\n    segment: false\n  };\n\n  constructor(\n    private el: ElementRef,\n    private plt: Platform,\n    private rnd: Renderer2\n  ) {}\n\n  ngAfterViewInit() {\n    this.gesture = new SuperTabsPanGesture(\n      this.plt,\n      this.config,\n      this.tabButtonsContainer.nativeElement,\n      this.rnd\n    );\n    this.gesture.onMove = (delta: number) => {\n      let newCPos = this.segmentPosition + delta;\n\n      const mw: number = this.el.nativeElement.offsetWidth,\n        cw: number = this.segmentWidth;\n\n      newCPos = Math.max(0, Math.min(newCPos, cw - mw));\n      this.setSegmentPosition(newCPos);\n    };\n\n    if (this.scrollTabs) {\n      this.plt.timeout(() => {\n        this.indexSegmentButtonWidths();\n      }, 100);\n    }\n  }\n\n  ngOnDestroy() {\n    this.gesture && this.gesture.destroy();\n  }\n\n  onTabSelect(index: number) {\n    this.tabSelect.emit(index);\n  }\n\n  alignIndicator(position: number, width: number, animate?: boolean) {\n    this.setIndicatorProperties(width, position, animate);\n  }\n\n  setIndicatorPosition(position: number, animate?: boolean) {\n    this.setIndicatorProperties(this.indicatorWidth, position, animate);\n  }\n\n  setIndicatorWidth(width: number, animate?: boolean) {\n    this.setIndicatorProperties(width, this.indicatorPosition, animate);\n  }\n\n  setIndicatorProperties(width: number, position: number, animate?: boolean) {\n    this.indicatorWidth = width;\n    this.indicatorPosition = position;\n    const scale = width / 100;\n    this.toggleAnimation('indicator', animate);\n    this.rnd.setStyle(\n      this.indicator.nativeElement,\n      this.plt.Css.transform,\n      'translate3d(' +\n        (position - this.segmentPosition) +\n        'px, 0, 0) scale3d(' +\n        scale +\n        ', 1, 1)'\n    );\n  }\n\n  setSegmentPosition(position: number, animate?: boolean) {\n    this.segmentPosition = position;\n    this.toggleAnimation('segment', animate);\n    this.rnd.setStyle(\n      this.tabButtonsBar.nativeElement,\n      this.plt.Css.transform,\n      `translate3d(${-1 * position}px,0,0)`\n    );\n    this.setIndicatorPosition(this.indicatorPosition, animate);\n  }\n\n  /**\n   * Enables/disables animation\n   * @param el\n   * @param animate\n   */\n  private toggleAnimation(el: 'indicator' | 'segment', animate: boolean) {\n    if (!this.config || this.config.transitionDuration === 0) {\n      return;\n    }\n\n    // only change style if the value changed\n    if (this.animationState[el] === animate) {\n      return;\n    }\n\n    this.animationState[el] = animate;\n\n    const _el: HTMLElement =\n      el === 'indicator'\n        ? this.indicator.nativeElement\n        : this.tabButtonsBar.nativeElement;\n    const value: string = animate\n      ? `all ${this.config.transitionDuration}ms ${this.config.transitionEase}`\n      : 'initial';\n\n    this.rnd.setStyle(_el, this.plt.Css.transition, value);\n  }\n\n  /**\n   * Indexes the segment button widths\n   */\n  indexSegmentButtonWidths() {\n    const index = [];\n    let total = 0;\n\n    this.tabButtons.forEach((btn: SuperTabButtonComponent, i: number) => {\n      index[i] = btn.getNativeElement().offsetWidth;\n      total += index[i];\n    });\n\n    this.segmentButtonWidths = index;\n    this.segmentWidth = total;\n  }\n}\n"]}