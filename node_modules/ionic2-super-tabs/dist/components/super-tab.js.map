{"version":3,"file":"super-tab.js","sourceRoot":"","sources":["../../src/components/super-tab.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  ErrorHandler,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  App,\n  Config,\n  DeepLinker,\n  DomController,\n  GestureController,\n  NavControllerBase,\n  NavOptions,\n  Platform,\n  ViewController,\n} from 'ionic-angular';\nimport { TransitionController } from 'ionic-angular/transitions/transition-controller';\n\nimport { SuperTabsComponent } from './super-tabs';\n\n@Component({\n  selector: 'super-tab',\n  template: '<div #viewport></div><div class=\"nav-decor\"></div>',\n  encapsulation: ViewEncapsulation.None\n})\nexport class SuperTabComponent extends NavControllerBase implements OnInit, AfterViewInit, OnDestroy {\n\n  /**\n   * Title of the tab\n   */\n  @Input()\n  title: string;\n\n  // TODO find less hacky approach\n  // needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\n  get tabTitle() {\n    return this.title;\n  }\n\n  // needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\n  get index() {\n    return this.parent.getTabIndexById(this.tabId);\n  }\n\n  /**\n   * Name of the ionicon to use\n   */\n  @Input()\n  icon: string;\n\n  /**\n   * @input {Page} Set the root page for this tab.\n   */\n  @Input() root: any;\n\n  private _rootParams: any;\n  rootNavCtrl: NavControllerBase;\n\n  /**\n   * @input {object} Any nav-params to pass to the root page of this tab.\n   */\n  @Input()\n  set rootParams(params: any) {\n    params.rootNavCtrl = this.rootNavCtrl;\n    this._rootParams = params;\n  }\n\n  get rootParams(): any {\n    return this._rootParams;\n  }\n\n  @Input('id')\n  tabId: string;\n\n  get _tabId() {\n    return this.tabId;\n  }\n\n  /**\n   * Badge value\n   * @type {Number}\n   */\n  @Input()\n  badge: number;\n\n\n  /**\n   * Enable/disable swipe to go back for iOS\n   * @return {boolean}\n   */\n  @Input()\n  get swipeBackEnabled(): boolean {\n    return this._sbEnabled;\n  }\n\n  set swipeBackEnabled(val: boolean) {\n    this._sbEnabled = Boolean(val);\n    this._swipeBackCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  @ViewChild('viewport', { read: ViewContainerRef })\n  set _vp(val: ViewContainerRef) {\n    this.setViewport(val);\n  }\n\n  /**\n   * Indicates whether the tab has been loaded\n   * @type {boolean}\n   */\n  private loaded = false;\n\n  /**\n   * A promise that resolves when the component has initialized\n   */\n  private init: Promise<any>;\n\n  /**\n   * Function to call to resolve the init promise\n   */\n  private initResolve: Function;\n\n  constructor(parent: SuperTabsComponent,\n              app: App,\n              config: Config,\n              plt: Platform,\n              el: ElementRef,\n              zone: NgZone,\n              rnd: Renderer,\n              cfr: ComponentFactoryResolver,\n              gestureCtrl: GestureController,\n              transCtrl: TransitionController,\n              errorHandler: ErrorHandler,\n              @Optional() private linker: DeepLinker,\n              private _dom: DomController,\n              private cd: ChangeDetectorRef) {\n    super(parent, app, config, plt, el, zone, rnd, cfr, gestureCtrl, transCtrl, linker, _dom, errorHandler);\n    this.init = new Promise<void>(resolve => this.initResolve = resolve);\n  }\n\n  _didEnter(view: ViewController) {\n    if (this.loaded) {\n      super._didEnter(view);\n    }\n  }\n\n  _willEnter(view: ViewController) {\n    if (this.loaded) {\n      super._willEnter(view);\n    }\n  }\n\n  ngOnInit() {\n    this.parent.addTab(this);\n  }\n\n  ngAfterViewInit() {\n    this.initResolve();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  setActive(active: boolean) {\n    if (active) {\n      this.cd.reattach();\n      this.cd.detectChanges();\n    } else if (!active) {\n      this.cd.detach();\n    }\n  }\n\n  async load(load: boolean) {\n    if (load && !this.loaded) {\n      await this.init;\n      await this.setRoot(this.root, this.rootParams, { animate: false });\n      this.loaded = true;\n    }\n  }\n\n  setBadge(value: number) {\n    this.badge = value;\n  }\n\n  clearBadge() {\n    delete this.badge;\n  }\n\n  increaseBadge(increaseBy: number = 1) {\n    this.badge += increaseBy;\n  }\n\n  decreaseBadge(decreaseBy: number = 1) {\n    this.badge = Math.max(0, this.badge - decreaseBy);\n  }\n\n  setWidth(width: number) {\n    this.setElementStyle('width', width + 'px');\n  }\n\n  goToRoot(opts: NavOptions): Promise<any> {\n    return this.setRoot(this.root, this.rootParams, opts, null);\n  }\n\n}\n"]}