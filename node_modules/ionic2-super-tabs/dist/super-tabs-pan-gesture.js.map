{"version":3,"file":"super-tabs-pan-gesture.js","sourceRoot":"","sources":["../src/super-tabs-pan-gesture.ts"],"names":[],"mappings":"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","sourcesContent":["import { Renderer2 } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { pointerCoord, PointerCoordinates } from 'ionic-angular/util/dom';\n\nimport { SuperTabsConfig } from './components/super-tabs';\n\nexport class SuperTabsPanGesture {\n  onMove: (delta: number) => void;\n\n  onEnd: (shortSwipe: boolean, shortSwipeDelta?: number) => void;\n\n  private initialCoords: PointerCoordinates;\n\n  private initialTimestamp: number;\n\n  private leftThreshold = 0;\n\n  private rightThreshold = 0;\n\n  private shouldCapture: boolean;\n\n  private isDragging: boolean;\n\n  private lastPosX: number;\n\n  private listeners: Function[] = [];\n\n  constructor(\n    private plt: Platform,\n    private config: SuperTabsConfig,\n    el: HTMLElement,\n    rnd: Renderer2\n  ) {\n    this.listeners.push(\n      rnd.listen(el, 'touchstart', this._onStart.bind(this)),\n      rnd.listen(el, 'touchmove', this._onMove.bind(this)),\n      rnd.listen(el, 'touchend', this._onEnd.bind(this))\n    );\n\n    if (config.sideMenu === 'both' || config.sideMenu === 'left') {\n      this.leftThreshold = config.sideMenuThreshold;\n    }\n\n    if (config.sideMenu === 'both' || config.sideMenu === 'right') {\n      this.rightThreshold = config.sideMenuThreshold;\n    }\n  }\n\n  destroy() {\n    this.listeners.forEach(fn => fn());\n  }\n\n  private _onStart(ev: TouchEvent) {\n    // check avoid this element\n    let avoid = false;\n    let element: any = ev.target;\n    if (element) {\n      do {\n        if (element.getAttribute && element.getAttribute('avoid-super-tabs')) {\n          avoid = true;\n        }\n        element = element.parentElement;\n      } while (element && !avoid);\n    }\n\n    if (avoid) {\n      this.shouldCapture = false;\n      return;\n    }\n\n    const coords: PointerCoordinates = pointerCoord(ev),\n      vw = this.plt.width();\n\n    if (coords.x < this.leftThreshold || coords.x > vw - this.rightThreshold) {\n      // ignore this gesture, it started in the side menu touch zone\n      this.shouldCapture = false;\n      return;\n    }\n\n    // the starting point looks good, let's see what happens when we move\n\n    this.initialCoords = coords;\n    if (this.config.shortSwipeDuration > 0) {\n      this.initialTimestamp = Date.now();\n    }\n    this.lastPosX = coords.x;\n  }\n\n  private _onMove(ev: TouchEvent) {\n    const coords: PointerCoordinates = pointerCoord(ev);\n\n    if (!this.isDragging) {\n      if (typeof this.shouldCapture !== 'boolean') {\n        // we haven't decided yet if we want to capture this gesture\n        this.checkGesture(coords);\n      }\n\n      if (this.shouldCapture === true) {\n        // gesture is good, let's capture all next onTouchMove events\n        this.isDragging = true;\n      } else {\n        return;\n      }\n    }\n\n    // stop anything else from capturing these events, to make sure the content doesn't slide\n    if (this.config.allowElementScroll !== true) {\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n\n    // get delta X\n    const deltaX: number = this.lastPosX - coords.x;\n\n    // emit value\n    this.onMove && this.onMove(deltaX);\n\n    // update last X value\n    this.lastPosX = coords.x;\n  }\n\n  private _onEnd(ev: TouchEvent) {\n    const coords: PointerCoordinates = pointerCoord(ev);\n\n    if (this.shouldCapture === true) {\n      if (this.config.shortSwipeDuration > 0) {\n        const deltaTime: number = Date.now() - this.initialTimestamp;\n\n        if (deltaTime <= this.config.shortSwipeDuration) {\n          this.onEnd && this.onEnd(true, coords.x - this.initialCoords.x);\n        } else {\n          this.onEnd && this.onEnd(false);\n        }\n      } else {\n        this.onEnd && this.onEnd(false);\n      }\n    }\n\n    this.isDragging = false;\n    this.shouldCapture = undefined;\n  }\n\n  private checkGesture(newCoords: PointerCoordinates) {\n    if (!this.initialCoords) {\n      return;\n    }\n\n    const radians = this.config.maxDragAngle * (Math.PI / 180),\n      maxCosine = Math.cos(radians),\n      deltaX = newCoords.x - this.initialCoords.x,\n      deltaY = newCoords.y - this.initialCoords.y,\n      distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n    if (distance >= this.config.dragThreshold) {\n      // swipe is long enough so far\n      // lets check the angle\n      const angle = Math.atan2(deltaY, deltaX),\n        cosine = Math.cos(angle);\n\n      this.shouldCapture = Math.abs(cosine) > maxCosine;\n    }\n  }\n}\n"]}